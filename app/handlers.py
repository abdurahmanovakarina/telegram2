from aiogram import Router, types, F 
from aiogram.filters import Command
import app.keyboard as kb
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import app.database.requests as db

router = Router()

class Registration(StatesGroup):
    name = State()
    gender = State()
    year = State()
    month = State()
    day = State()
    time = State()


class Choice_of_horoscope(StatesGroup):
    zodiac = State()
    period = State()
    horoscope = State()


@router.message(Command('start'))
async def cmd_start(message: types.Message, state: FSMContext):
    if not db.get_user(message.from_user.id):
        await state.set_state(Registration.name)
        await state.update_data(tg_id=message.from_user.id)
        await message.answer(f'‚ú®–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å‚ú®, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—èü§ó')
    else:
        await message.answer(f"{message.from_user.first_name},  –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!‚ú®\n\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –¥–∞–Ω–Ω—ã–π –∞—Å—Ç—Ä–æ –±–æ—Ç.üåô", reply_markup=kb.main)



@router.message(Registration.name)
async def reg_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(Registration.gender)
    await message.answer('‚ôÇ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª ‚ôÄ', reply_markup=kb.genders)
    

@router.callback_query(Registration.gender)
async def reg_gender(callback: types.CallbackQuery, state: FSMContext):
    await state.update_data(gender=callback.data)
    await state.set_state(Registration.year)
    await callback.message.answer('üìÖ–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è', reply_markup=kb.years)
    

@router.callback_query(Registration.year)
async def reg_year(callback: types.CallbackQuery, state: FSMContext):
    await state.update_data(year=callback.data)
    await state.set_state(Registration.month)
    await callback.message.answer('üìÖ–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü —Ä–æ–∂–¥–µ–Ω–∏—è', reply_markup=kb.months)
    
    
@router.callback_query(Registration.month)
async def reg_month(callback: types.CallbackQuery, state: FSMContext):
    await state.update_data(month=callback.data)
    await state.set_state(Registration.day)
    await callback.message.answer('üìÖ–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',reply_markup=kb.days)
    
    
@router.callback_query(Registration.day)
async def reg_day(callback: types.CallbackQuery, state: FSMContext):
    await state.update_data(day=callback.data)
    data = await state.get_data()
    db.set_user(data['tg_id'], data['name'], data['gender'])
    await callback.message.answer(f"{data['name']},  –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!‚ú®\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ —á—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.üåô", reply_markup=kb.main)
    await state.clear()


# –ì–û–†–û–°–ö–û–ü
@router.callback_query(F.data == 'horoscopes')
async def choise_horoscope(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(Choice_of_horoscope.zodiac)
    await callback.message.edit_text('‚òØ –í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ ‚òØ', reply_markup=kb.zodiac)
    
    
@router.callback_query(Choice_of_horoscope.zodiac)
async def choise_zodiacI(callback: types.CallbackQuery, state: FSMContext):
    await state.update_data(zodiac=callback.data) 
    await state.set_state(Choice_of_horoscope.period)
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ ü™ê', reply_markup= kb.period)
    

@router.callback_query(Choice_of_horoscope.period)
async def horoscope_output(callback: types.CallbackQuery, state: FSMContext):
    await state.update_data(period=callback.data)
    data = await state.get_data()
    result = db.get_horoscope(data['zodiac'])
    await callback.message.edit_text(f'ü™ê–í–∞—à –≥–æ—Ä–æ—Å–∫–æ–ø: {result[1 if data["period"] == "today" else 2 if data["period"] == "tomorrow" else 3 if data["period"] == "month" else 4 if data["period"] == "year" else None]}')

# –¥–µ–ø–ª–æ–π –∏–ª–∏ –∑–∞–¥–µ–ø–ª–æ–∏—Ç—å(–∑–∞–ª–∏—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä —á—Ç–æ-–ª–∏–±–æ)


# 300 —Ä—É–±–ª–µ–π - —Å–µ—Ä–≤–µ—Ä
# 150 —Ä—É–±–ª–µ–π - –æ–Ω –¥–∞–µ—Ç
# 150 —Ä—É–±–ª–µ–π
# 150 —Ä—É–±–ª–µ–π
